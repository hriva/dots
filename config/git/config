[core]
	longpaths = true
	pager = delta
	autocrlf = input

[init]
	defaultBranch = main

[commit]
	gpgSign = false
    verbose = true

[branch]
    sort = -committerdate

[tag]
    sort = -version:refname

[push]
    autoSetupRemote = true

[maintenance]
    auto = true
    strategy = incremental

[core]
    compression = 9

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[interactive]
	diffFilter = delta --color-only

[delta]
	navigate = true    # use n and N to move between diff sections
	light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
	side-by-side = true
	line-numbers = true

[merge]
	conflictstyle = diff3

[diff]
	colorMoved = default
	algorithm = histogram

[diff "word"]
	textconv = docx2txt

[rerere]
    enabled = true

[alias]
	force-pull = !"git fetch --all; git reset --hard HEAD; git merge @{u}"
	stash-pull = !"git fetch --all; git stash; git merge @{u}; git stash pop"
	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	lg = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    graph = log --all --graph --decorate --oneline
	a = add
	c = commit --verbose -m
	cm = commit -m
	d = diff
	# list branches sorted by last modified
	b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
	s = status -sb
	su = status -uno
	R = ls-tree --full-tree --name-only -r HEAD
    partial-clone = clone --filter=blob:none
    shallow-clone = clone --depth=1
	untrack = update-index --assume-unchanged
	retrack = update-index --no-assume-unchanged
    # pull new git ignore file by lang
    ignore = "!gi() { local IFS=','; curl -sL https://www.toptal.com/developers/gitignore/api/\"$*\"; }; gi"

	# list aliases
	la = "!git config -l | grep alias | cut -c 7-"
	wta = worktree add
	wtls = worktree list
	wtrm = worktree remove

[include]
	path = main-user

[includeIf "gitdir:~/Code/work/"]
    path = work-user
